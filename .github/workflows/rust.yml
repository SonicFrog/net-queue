on: [pull_request]

name: CI

jobs:
  commit-check:
    name: Check commit log
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Validate commit history
        uses: aevea/commitsar@v0.19.0

  check:
    name: unit tests
    runs-on: ubuntu-latest
    needs: [ commit-check, deny ]
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        name: install toolchain
        with:
          profile: minimal
          components: clippy, rustfmt
          toolchain: stable
          default: true

      - uses: Swatinem/rust-cache@v1

      - uses: actions-rs/cargo@v1
        name: cargo fmt
        with:
          command: fmt
          args: --all -- --check

      - uses: actions-rs/cargo@v1
        name: cargo clippy
        with:
          command: clippy
          args: --all-features --all-targets --workspace -- -D warnings

      - uses: actions-rs/cargo@v1
        name: cargo test
        env:
          EXOSCALE_TEMPLATE: ${{ secrets.EXOSCALE_TEMPLATE }}
          EXOSCALE_API_KEY: ${{ secrets.EXOSCALE_API_KEY }}
          EXOSCALE_SECRET: ${{ secrets.EXOSCALE_SECRET }}
          EXOSCALE_SECURITY_GROUP: ${{ secrets.EXOSCALE_SECURITY_GROUP }}
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        with:
          command: test
          args: --all-features --workspace

      - uses: actions-rs/cargo@v1
        name: build examples
        with:
          command: build
          args: --examples

  coverage:
    name: coverage
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        name: install toolchain
        with:
          profile: minimal
          toolchain: stable

      - uses: Swatinem/rust-cache@v1
        with:
          key: "coverage"

      - uses: superchargejs/redis-github-action@1.1.0
        name: setup redis
        with:
          redis-version: 6.2

      - uses: actions-rs/tarpaulin@v0.1
        name: Run coverage
        with:
          version: '0.15.0'
          args: '--workspace'

  deny:
    name: Check dependencies
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        name: git checkout

      - uses: EmbarkStudios/cargo-deny-action@v1
        name: run cargo deny check
        with:
          arguments: --workspace --all-features
